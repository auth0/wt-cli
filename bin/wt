#!/usr/bin/env node
var Chalk = require('chalk');
var Cli = require('structured-cli');
var Package = require('../package.json');
var Updates = require('update-notifier');
var _ = require('lodash');
var ConfigFile = require('../lib/config');
var node4Migration = require('../lib/node4Migration');


var notifier = Updates({
    pkg: {
        name: Package.name,
        version: Package.version,
    },
});

notifier.notify();


var cli = Cli.createApp({
    description: Package.description,
    version: Package.version,
    epilog: Chalk.underline('Sample usage:') + '\n'
        + '1. Set up a webtask profile:' + '\n'
        + Chalk.bold('  $ wt init') + '\n'
        + '2. Create a basic webtask:' + '\n'
        + Chalk.bold('  $ wt create ./sample-webtasks/hello-world.js') + '\n'
});


cli.addChild(require('./init'));
cli.addChild(require('./create'));
cli.addChild(require('./ls'));
cli.addChild(require('./rm'));
cli.addChild(require('./serve'));
cli.addChild(require('./debug'));
cli.addChild(require('./edit'));
cli.addChild(require('./browse'));
cli.addChild(require('./inspect'));
cli.addChild(require('./update'));
cli.addChild(require('./profile'));
cli.addChild(require('./cron'));
cli.addChild(require('./logs'));
cli.addChild(require('./token'));
cli.addChild(require('./modules'));


Cli.run(cli)
    .timeout(1000 * 60 * 30, Cli.error.timeout('Command timed out after 30 min'))
    .tap(() => {
        if (global.preventMigrationNotice) return;
        var config = new ConfigFile();
        return config.load().then(() => {
            var node4Profiles = [];
            for (var p in config.profiles) {
                if (node4Migration.isNode4Profile(config.profiles[p])) {
                    node4Profiles.push(p);
                }
            }
            if (node4Profiles.length > 0) {
                node4Profiles.sort();
                console.log();
                console.log(Chalk.red.bold('WARNING:'), Chalk.red(`The wt-cli profiles listed below manage webtasks running in Node 4 which reaches ${Chalk.bold('end of life on 4/30/2018')}. Please migrate webtasks from all those profiles from Node 4 to Node 8 following the instructions at https://github.com/auth0/wt-cli/wiki/Node8:`));
                console.log();
                console.log(Chalk.red(node4Profiles.join(', ')));
                console.log();
            }
        });
    })
    // Code: 1
    .catch(_.matchesProperty('code', 'E_CANCELLED'), function (err) {
        console.error(err.message);

        process.exit(1);
    })
    // Code: 2
    .catch(_.matchesProperty('code', 'E_INVALID'), function (err) {
        console.error(err.parser.formatUsage());
        console.error(Chalk.red(err.message));

        process.exit(2);
    })
    // Code: 3
    .catch(_.matchesProperty('code', 'E_HINT'), function (err) {
        console.error(err.message);

        process.exit(3);
    })
    // Code: 4
    .catch(_.matchesProperty('code', 'E_TIMEOUT'), function (err) {
        console.error(Chalk.red(err.message));

        process.exit(4);
    })
    // Code: 5
    .catch(_.matchesProperty('code', 'E_NOTFOUND'), function (err) {
        console.error(Chalk.red(err.message));

        process.exit(5);
    })
    // Code: 6
    .catch(_.matchesProperty('code', 'E_BADREQUEST'), function (err) {
        console.error(Chalk.red(err.message));

        process.exit(6);
    })
    // Code: 7
    .catch(_.matchesProperty('code', 'E_SERVERERROR'), function (err) {
        console.error(Chalk.red(err.message));

        process.exit(7);
    })
    // Code: 8
    .catch(_.matchesProperty('code', 'E_NOTAUTHORIZED'), function (err) {
        console.error(Chalk.red(err.message));

        process.exit(8);
    })    // Code: 99
    .catch(function (err) {
        console.error(Chalk.red('Uncaught error: ', err.message));
        console.error(err.stack);
        console.error('Please report this at: https://github.com/auth0/wt-cli/issues');

        process.exit(99);
    })
    .then(function () {
        process.exit(0);
    });
